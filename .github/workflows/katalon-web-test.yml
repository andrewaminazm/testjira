name: Katalon Web Test

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  katalon-web-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Set a timeout for the job

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Java (required for Katalon)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'  # Specify the JDK distribution

      # Install Xvfb for headless execution
      - name: Install Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      # Cache Katalon and project dependencies
      - name: Cache Katalon
        uses: actions/cache@v3
        with:
          path: /opt/Katalon_Studio_Engine_Linux_64-9.7.2
          key: ${{ runner.os }}-katalon-${{ hashFiles('**/testjira.prj') }}  # Cache based on project file changes
          restore-keys: |
            ${{ runner.os }}-katalon-

      # Download Katalon Studio version 9.7.2 if not cached
      - name: Download Katalon Studio
        run: |
          if [ ! -d "/opt/Katalon_Studio_Engine_Linux_64-9.7.2" ]; then
            wget https://download.katalon.com/9.7.2/Katalon_Studio_Engine_Linux_64-9.7.2.tar.gz -O katalon.tar.gz
            tar -xzf katalon.tar.gz -C /opt/
            echo "KATALON_HOME=/opt/Katalon_Studio_Engine_Linux_64-9.7.2" >> $GITHUB_ENV
            echo "Katalon Studio downloaded and extracted."
          else
            echo "Katalon Studio is already cached."
          fi

      # Verify Katalon installation and set executable permissions
      - name: Verify Katalon Installation
        run: |
          if [ -f "/opt/Katalon_Studio_Engine_Linux_64-9.7.2/katalonc" ]; then
            echo "Katalon executable found at: /opt/Katalon_Studio_Engine_Linux_64-9.7.2/katalonc"
            chmod +x /opt/Katalon_Studio_Engine_Linux_64-9.7.2/katalonc  # Ensure the executable has permission
            echo "Katalon executable is ready to use."
          else
            echo "katalonc not found in /opt/Katalon_Studio_Engine_Linux_64-9.7.2."
            exit 1
          fi

      # Optional: Add a step to verify Java installation
      - name: Verify Java Installation
        run: |
          java -version
          echo "Java is correctly installed."

      # Skip running Katalon tests
      - name: Skipped Katalon Test Run
        run: |
          echo "Skipping Katalon test run as per request."
       # Transition issues from "In Progress" to "In Review"
      - name: Transition Jira Issues
        env:
          JIRA_USER: yosefnems42@gmail.com
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}  # Store your API token in GitHub Secrets
          JIRA_URL: https://yosefnems42.atlassian.net
        run: |
          # Get the transition ID for "In Review"
          TRANSITION_ID=$(curl -s -u $JIRA_USER:$JIRA_API_TOKEN \
            -X GET \
            -H "Content-Type: application/json" \
            "$JIRA_URL/rest/api/3/issue/MBA-4/transitions" | \
            jq -r '.transitions[] | select(.name=="In Review") | .id')

          if [ -z "$TRANSITION_ID" ]; then
            echo "Transition ID for 'In Review' not found."
            exit 1
          fi

          # Get issues in "In Progress" status
          ISSUES=$(curl -s -u $JIRA_USER:$JIRA_API_TOKEN \
            -X GET \
            -H "Content-Type: application/json" \
            "$JIRA_URL/rest/api/3/search?jql=status='In Progress'" | \
            jq -r '.issues[].key')

          # Loop through each issue and transition it
          for ISSUE in $ISSUES; do
            echo "Transitioning issue: $ISSUE to 'In Review'"
            curl -s -u $JIRA_USER:$JIRA_API_TOKEN \
            -X POST \
            -H "Content-Type: application/json" \
            --data "{\"transition\":{\"id\":\"$TRANSITION_ID\"}}" \
            "$JIRA_URL/rest/api/3/issue/$ISSUE/transitions"
          done
      # Upload test results as artifacts (optional)
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: $(pwd)/Reports  # Adjust based on your project structure
