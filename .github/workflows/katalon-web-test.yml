name: Katalon Web Test

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  katalon-web-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Set a timeout for the job

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Java (required for Katalon)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'  # Specify the JDK distribution

      # Install Xvfb for headless execution
      - name: Install Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      # Cache Katalon and project dependencies
      - name: Cache Katalon
        uses: actions/cache@v3
        with:
          path: /opt/Katalon_Studio_Engine_Linux_64-9.7.2
          key: ${{ runner.os }}-katalon-${{ hashFiles('**/TESTJIRA.prj') }}  # Cache based on project file changes
          restore-keys: |
            ${{ runner.os }}-katalon-

      # Download Katalon Studio version 9.7.2 if not cached
      - name: Download Katalon Studio
        run: |
          if [ ! -d "/opt/Katalon_Studio_Engine_Linux_64-9.7.2" ]; then
            wget https://download.katalon.com/9.7.2/Katalon_Studio_Engine_Linux_64-9.7.2.tar.gz -O katalon.tar.gz
            tar -xzf katalon.tar.gz -C /opt/
            echo "KATALON_HOME=/opt/Katalon_Studio_Engine_Linux_64-9.7.2" >> $GITHUB_ENV
            echo "Katalon Studio downloaded and extracted."
          else
            echo "Katalon Studio is already cached."
          fi

      # Verify Katalon installation and set executable permissions
      - name: Verify Katalon Installation
        run: |
          ls -R /opt/
          if [ -f "$KATALON_HOME/katalonc" ]; then
            echo "Katalon executable found at: $KATALON_HOME/katalonc"
            chmod +x $KATALON_HOME/katalonc  # Ensure the executable has permission
          else
            echo "katalonc not found in $KATALON_HOME."
            find /opt/ -name "katalonc"
            exit 1
          fi

      # Run Katalon Studio tests in headless mode using Xvfb
      - name: Run Katalon tests
        run: |
          export NO_AT_BRIDGE=1  # Suppress accessibility bus warnings
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99  # Set the display variable
          
          # Add a delay to allow Xvfb to start up properly
          sleep 5

          # Run the Katalon test suite
          $KATALON_HOME/katalonc \
          -noSplash \
          -runMode=console \
          -projectPath=$(pwd)/TESTJIRA.prj \
          -retry=0 \
          -testSuitePath="Test Suites/Status.ts" \
          -browserType="ChromeHeadless" \
          -apiKey=$KATALON_API_KEY \
          -executionProfile="default" \
          -logLevel=debug \  # Change to debug for more information
          -testSuiteFailOnError=false
        env:
          KATALON_API_KEY: ${{ secrets.KATALON_API_KEY }}

      # Upload test results as artifacts (optional)
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: $(pwd)/Reports  # Adjust based on your project structure
